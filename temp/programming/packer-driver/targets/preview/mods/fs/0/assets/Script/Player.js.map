{"version":3,"sources":["file:///Users/shashankchaurasia/CocosWorkspace/3dDemoGame/assets/Script/Player.ts"],"names":["_decorator","Component","Vec3","log","Config","ccclass","property","Player","gameFps","dataPerSec","moveSpeed","start","startPos","node","position","x","y","z","endPos","setInterval","updatePosition","bind","onPositionUpdate","plyr","positonStack","length","push","clearLoop","livePos","shift","dt","frames","maxFrames","pos","lerp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,G,OAAAA,G;;AACnCC,MAAAA,M,iBAAAA,M;;;;;;;AACDC,MAAAA,O,GAAsBL,U,CAAtBK,O;AAASC,MAAAA,Q,GAAaN,U,CAAbM,Q;;wBAGJC,M,WADZF,OAAO,CAAC,QAAD,C;;;;;;;;;;;;yEAGmB,E;;;;;;mEAId,C;;sEAEG;AAAA;AAAA,gCAAOG,OAAP,GAAiB;AAAA;AAAA,gCAAOC,U;;kEAG5B;AAAA;AAAA,gCAAOC,S;;oEACC,IAAIR,IAAJ,CAAS,CAAT,EAAY,CAAZ,C;;;;;;;eAEhBS,K,GAAA,iBAAQ;AACJ,eAAKC,QAAL,GAAgB,IAAIV,IAAJ,CAAS,KAAKW,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAAhB;AACA,eAAKC,MAAL,GAAc,IAAIhB,IAAJ,CAAS,KAAKW,IAAL,CAAUC,QAAV,CAAmBC,CAA5B,EAA+B,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAlD,EAAqD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAxE,CAAd,CAFI,CAIJ;;AACAE,UAAAA,WAAW,CAAC,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAD,EAAiC,OAAO;AAAA;AAAA,gCAAOb,OAA/C,CAAX;AACH,S;;eAEDc,gB,GAAA,0BAAiBC,IAAjB,EAAuB;AACnB,cAAI,KAAKC,YAAL,CAAkBC,MAAlB,GAA2B,CAA/B,EACI,KAAKD,YAAL,CAAkBE,IAAlB,CAAuB,IAAIxB,IAAJ,CAASqB,IAAI,CAACR,CAAd,EAAiBQ,IAAI,CAACP,CAAtB,EAAyBO,IAAI,CAACN,CAA9B,CAAvB,EAFe,CAGnB;AACH,S;;eAEDU,S,GAAA,qBAAY;AACR;AACA,cAAI,KAAKH,YAAL,CAAkBC,MAAtB,EACI,KAAKG,OAAL,GAAe,KAAKJ,YAAL,CAAkBK,KAAlB,EAAf;AACJ,eAAKL,YAAL,CAAkBC,MAAlB,GAA2B,CAA3B;AACH,S;;eAEDL,c,GAAA,wBAAeU,EAAf,EAAmB;AAEf,cAAI,KAAKC,MAAL,GAAc,KAAKC,SAAvB,EAAkC;AAE9B,gBAAI,KAAKR,YAAL,CAAkBC,MAAlB,IAA4B,CAAhC,EACI,OAH0B,CAK9B;AAEA;AACA;;AAEA,iBAAKD,YAAL,CAAkBK,KAAlB;AAEA,iBAAKjB,QAAL,GAAgB,IAAIV,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAhB;AACA,iBAAKgB,MAAL,GAAc,IAAIhB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAd,CAb8B,CAe9B;AACA;AAEA;;AAEA,iBAAK6B,MAAL,GAAc,CAAd;AACH;;AAED,cAAIE,GAAG,GAAG/B,IAAI,CAACgC,IAAL,CAAU,IAAIhC,IAAJ,EAAV,EAAsB,KAAKU,QAA3B,EAAqC,KAAKM,MAA1C,EAAkD,KAAKa,MAAL,GAAc,KAAKC,SAArE,CAAV;AACA7B,UAAAA,GAAG,CAAC8B,GAAG,CAAClB,CAAL,CAAH;AACA,eAAKF,IAAL,CAAUC,QAAV,GAAqBmB,GAArB;AACA,YAAE,KAAKF,MAAP;AACH,S;;;QAhEuB9B,S","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec3, log, macro, Label, CCObject } from 'cc';\r\nimport { Config } from './socket/Config';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Player')\r\nexport class Player extends Component {\r\n\r\n    positonStack: Vec3[] = [];\r\n    startPos: Vec3;\r\n    endPos: Vec3;\r\n\r\n    frames = 0;\r\n    // To fetch coordinate from pool\r\n    maxFrames = Config.gameFps / Config.dataPerSec;\r\n\r\n\r\n    speed = Config.moveSpeed;\r\n    livePos: Vec3 = new Vec3(0, 0);\r\n\r\n    start() {\r\n        this.startPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\r\n        this.endPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\r\n\r\n        // setInterval(this.updateOld.bind(this), 1000 / Config.gameFps);\r\n        setInterval(this.updatePosition.bind(this), 1000 / Config.gameFps);\r\n    }\r\n\r\n    onPositionUpdate(plyr) {\r\n        if (this.positonStack.length < 1)\r\n            this.positonStack.push(new Vec3(plyr.x, plyr.y, plyr.z));\r\n        // this.node.position = new Vec3(plyr.x, plyr.y, plyr.z);\r\n    }\r\n\r\n    clearLoop() {\r\n        return;\r\n        if (this.positonStack.length)\r\n            this.livePos = this.positonStack.shift();\r\n        this.positonStack.length = 0;\r\n    }\r\n\r\n    updatePosition(dt) {\r\n\r\n        if (this.frames > this.maxFrames) {\r\n\r\n            if (this.positonStack.length == 0)\r\n                return;\r\n\r\n            // let diffX = this.endPos.x - this.node.position.x;\r\n\r\n            // this.startPos = new Vec3(this.node.position.x, this.node.position.y, this.node.position.z);\r\n            // this.endPos = this.positonStack.shift();\r\n\r\n            this.positonStack.shift();\r\n\r\n            this.startPos = new Vec3(0, 0, 0);\r\n            this.endPos = new Vec3(5, 0, 0);\r\n\r\n            // log('SartPos- ', this.startPos.x);\r\n            // log('EndPos- ', this.endPos.x);\r\n\r\n            // this.endPos.x -= diffX;\r\n\r\n            this.frames = 0;\r\n        }\r\n\r\n        let pos = Vec3.lerp(new Vec3(), this.startPos, this.endPos, this.frames / this.maxFrames);\r\n        log(pos.x);\r\n        this.node.position = pos;\r\n        ++this.frames;\r\n    }\r\n}"]}