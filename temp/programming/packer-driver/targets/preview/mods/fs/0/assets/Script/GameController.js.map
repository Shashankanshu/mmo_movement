{"version":3,"sources":["file:///Users/shashankchaurasia/CocosWorkspace/3dDemoGame/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","CapsuleCollider","GameConfig","BotController","PowerUpController","ccclass","property","GameController","type","start","world","node","getParent","player","addToWorld","setPosition","playerClass","getComponent","setCamera","playerCamera","addName","namePrefab","botController","addBots","bot","powerupController","setEatables","gummyBear","spawnPowerup","collider","on","onCollision","child","addChild","getWorld","event","otherCollider","name","moveStationCamera","resetStationCamera","removeGummy","gainValue","powerup","gain","resize","_onCollisionEnter","touchCallBack","vector","angle","touchAngleCallBack"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Prefab, instantiate, Vec3, BoxCollider, ICollisionEvent, Collider, CapsuleCollider, randomRange, debug, Material } from 'cc';\r\nimport { GameConfig } from '../config/GameConfig';\r\nimport { Bot } from './bot/Bot';\r\nimport { BotController } from './bot/BotController';\r\nimport { Player } from './Player';\r\nimport { PowerUpController } from './powerUps/PowerUpController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    @property({ type: Prefab })\r\n    player: Prefab;\r\n\r\n    @property({ type: Prefab })\r\n    bot: Prefab;\r\n\r\n    @property({ type: Prefab })\r\n    gummyBear: Prefab = null;\r\n\r\n    @property({ type: Prefab })\r\n    namePrefab: Prefab = null;\r\n\r\n    @property({ type: Node })\r\n    playerCamera: Node = null;\r\n    \r\n    @property({ type: Node })\r\n    platform: Node = null;\r\n\r\n    playerClass: Player;\r\n    botController: BotController;\r\n    powerupController: PowerUpController;\r\n\r\n    private world: Node;\r\n\r\n    start() {\r\n\r\n        this.world = this.node.getParent();\r\n\r\n        // Adding Player\r\n        let player = instantiate(this.player);\r\n        this.addToWorld(player);\r\n        player.setPosition(new Vec3(0, 0.5, 15));\r\n        this.playerClass = player.getComponent('Player') as Player;\r\n        this.playerClass.setCamera(this.playerCamera);\r\n        this.playerClass.addName(this.namePrefab, this.world);\r\n\r\n        // Adding bots\r\n        this.botController = new BotController(this);\r\n        this.botController.playerCamera = this.playerClass.playerCamera;\r\n        this.botController.addBots(this.bot, this.namePrefab, player);\r\n\r\n\r\n        // Adding Eatables\r\n        this.powerupController = new PowerUpController(this);\r\n        this.powerupController.setEatables([this.gummyBear]);\r\n        this.powerupController.spawnPowerup();\r\n\r\n\r\n        // Adding Player Collider\r\n        const collider = player.getComponent(CapsuleCollider)!;\r\n        collider.on('onCollisionEnter', this.onCollision, this);\r\n    }\r\n\r\n    public addToWorld(child: Node) {\r\n        this.world.addChild(child);\r\n    }\r\n\r\n    public getWorld() {\r\n        return this.world;\r\n    }\r\n\r\n    private onCollision(event: ICollisionEvent) {\r\n\r\n        const otherCollider = event.otherCollider;\r\n        \r\n        if (otherCollider.node.name == 'spaceStation') {\r\n            this.playerClass.moveStationCamera();\r\n            return;\r\n        }\r\n        if (otherCollider.node.name == 'deathPlatform') {\r\n            this.playerClass.resetStationCamera();\r\n            return;\r\n        }\r\n        \r\n        if (otherCollider.node.name == 'Platform') {\r\n            return;\r\n        }\r\n\r\n        if (otherCollider.node.name == 'GummyBear') {\r\n            // if (this.playerClass.lastColliderId != otherCollider.uuid) {\r\n\r\n                this.powerupController.removeGummy(otherCollider);\r\n\r\n                let gainValue = GameConfig.powerup[otherCollider.node.name].gain;\r\n                this.playerClass.resize(gainValue);\r\n\r\n\r\n            //     this.playerClass.lastColliderId = otherCollider.uuid;\r\n            // }\r\n        } else if (otherCollider.node.name == 'Bot') {\r\n            this.playerClass._onCollisionEnter(event);\r\n        }\r\n\r\n    }\r\n\r\n    touchCallBack(vector: Vec3, angle: number) {\r\n        this.playerClass.touchCallBack(vector, angle);\r\n    }\r\n\r\n    touchAngleCallBack(vector: Vec3, angle: number) {\r\n        this.playerClass.touchAngleCallBack(vector, angle);\r\n    }\r\n}"]}